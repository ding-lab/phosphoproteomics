p = p + labs(x = "", y="kinase:substrate:SUB_MOD_RSD")
p = p + theme(axis.title = element_text(size=10), axis.text.x = element_text(colour="black", size=6,angle=90, vjust=0.5), axis.text.y = element_text(colour="black", size=8))#element_text(colour="black", size=14))
p
v <- ggplot(table) +
geom_tile(aes(x=model, y=pairs, fill = P_pro_kin_scale,size=size))
v
v <- ggplot(table) +
geom_point(aes(x=model, y=pairs, fill = P_pro_kin_scale,size=size))
v
v <- ggplot(table) +
geom_point(aes(x=model, y=pairs, colour = P_pro_kin_scale,size=size))
v
v <- ggplot(table) +
geom_point(aes(x=model, y=pairs, colour = P_pro_kin_scale,size=size))+ scale_fill_distiller(palette = "Spectral")
v
p = ggplot(table,aes(x=model, y=pairs, colour=-log10(P_pro_kin), size =size))# make this the original ethni
p = p + facet_grid(.~Cancer, drop=T, space = "free_x",scales = "free_x")#, space = "free", scales = "free")
p = p + geom_point() + theme_bw() + theme_nogrid()
p = p + labs(x = "", y="kinase:substrate:SUB_MOD_RSD")
p = p + theme(axis.title = element_text(size=10), axis.text.x = element_text(colour="black", size=6,angle=90, vjust=0.5), axis.text.y = element_text(colour="black", size=8))#element_text(colour="black", size=14))
p
t1 <- data.table(t0[t0$model=="pho_sub~pro_kinase"& t0$Cancer=="BRCA",], key="P_pro_kin")
rows <- c()
for(i in 1:top){
r <- unlist(which(t0$pair==t1$pair[i]))
rows <- c(rows,r)
}
table <- t0[rows,]
table$order <- nrow(table):1
table$pairs <- reorder(table$pair,table$order)
p = ggplot(table,aes(x=model, y=pairs, colour=-log10(P_pro_kin), size =size))# make this the original ethni
p = p + facet_grid(.~Cancer, drop=T, space = "free_x",scales = "free_x")#, space = "free", scales = "free")
p = p + geom_point() + theme_bw() + theme_nogrid()
p = p + labs(x = "", y="kinase:substrate:SUB_MOD_RSD")
p = p + theme(axis.title = element_text(size=10), axis.text.x = element_text(colour="black", size=6,angle=90, vjust=0.5), axis.text.y = element_text(colour="black", size=8))#element_text(colour="black", size=14))
p
names <- c("BRCA1","BRCA2","CDH1","CDK12","GATA3","KMT2C","KRAS","MAP3K1","NF1","PIK3CA","TP53","APC","SMAD4","CHEK2","MAPK3","AKT1")
intersect(names,t1$SUBSTRATE)
intersect(names,t1$KINASE)
setwd("~/proteomics/pan3can_analysis/phospho_network")
which(t1$KINASE=="MARK3")
which(t1$KINASE=="MAPK3")
which(t1$KINASE=="AKT1")
which(t1$KINASE=="CHEK2")
p = ggplot(table,aes(x=model, y=pairs, colour=-log10(P_pro_kin), size =size))# make this the original ethni
p = p + facet_grid(.~Cancer, drop=T, space = "free_x",scales = "free_x")#, space = "free", scales = "free")
p = p + geom_point() + theme_bw() + theme_nogrid()
p = p + labs(x = "", y="kinase:substrate:SUB_MOD_RSD")
p = p + theme(axis.title = element_text(size=10), axis.text.x = element_text(colour="black", size=6,angle=90, vjust=0.5), axis.text.y = element_text(colour="black", size=10))#element_text(colour="black", size=14))
p
top <- 50 # choose top n rows for P_pro_kin for model1
cancer <- "OV" #choose the cancer you want to sort
# sort table_sig first by P_pro_kin
t0 <- table_sig_self
t1 <- data.table(t0[t0$model=="pho_sub~pro_kinase"& t0$Cancer=="BRCA",], key="P_pro_kin")
rows <- c()
for(i in 1:top){
r <- unlist(which(t0$pair==t1$pair[i]))
rows <- c(rows,r)
}
table <- t0[rows,]
table$order <- nrow(table):1
table$pairs <- reorder(table$pair,table$order)
p = ggplot(table,aes(x=model, y=pairs, colour=-log10(P_pro_kin), size =size))# make this the original ethni
p = p + facet_grid(.~Cancer, drop=T, space = "free_x",scales = "free_x")#, space = "free", scales = "free")
p = p + geom_point() + theme_bw() + theme_nogrid()
p = p + labs(x = "", y="kinase:substrate:SUB_MOD_RSD")
p = p + theme(axis.title = element_text(size=10), axis.text.x = element_text(colour="black", size=6,angle=90, vjust=0.5), axis.text.y = element_text(colour="black", size=10))#element_text(colour="black", size=14))
p
t1 <- data.table(t0[t0$model=="pho_sub~pro_kinase"& t0$Cancer==cancer,], key="P_pro_kin")
rows <- c()
for(i in 1:top){
r <- unlist(which(t0$pair==t1$pair[i]))
rows <- c(rows,r)
}
table <- t0[rows,]
table$order <- nrow(table):1
table$pairs <- reorder(table$pair,table$order)
p = ggplot(table,aes(x=model, y=pairs, colour=-log10(P_pro_kin), size =size))# make this the original ethni
p = p + facet_grid(.~Cancer, drop=T, space = "free_x",scales = "free_x")#, space = "free", scales = "free")
p = p + geom_point() + theme_bw() + theme_nogrid()
p = p + labs(x = "", y="kinase:substrate:SUB_MOD_RSD")
p = p + theme(axis.title = element_text(size=10), axis.text.x = element_text(colour="black", size=6,angle=90, vjust=0.5), axis.text.y = element_text(colour="black", size=10))#element_text(colour="black", size=14))
p
intersect(names,t0$KINASE)
top <- 50 # choose top n rows for P_pro_kin for model1
cancer <- "BRCA" #choose the cancer you want to sort
# sort table_sig first by P_pro_kin
t0 <- table_sig_other
t1 <- data.table(t0[t0$model=="pho_sub~pro_kinase"& t0$Cancer==cancer,], key="P_pro_kin")
rows <- c()
for(i in 1:top){
r <- unlist(which(t0$pair==t1$pair[i]))
rows <- c(rows,r)
}
table <- t0[rows,]
table$order <- nrow(table):1
table$pairs <- reorder(table$pair,table$order)
p = ggplot(table,aes(x=model, y=pairs, colour=-log10(P_pro_kin), size =size))# make this the original ethni
p = p + facet_grid(.~Cancer, drop=T, space = "free_x",scales = "free_x")#, space = "free", scales = "free")
p = p + geom_point() + theme_bw() + theme_nogrid()
p = p + labs(x = "", y="kinase:substrate:SUB_MOD_RSD")
p = p + theme(axis.title = element_text(size=10), axis.text.x = element_text(colour="black", size=6,angle=90, vjust=0.5), axis.text.y = element_text(colour="black", size=10))#element_text(colour="black", size=14))
p
intersect(t0$KINASE,names)
intersect(t0$SUBSTRATE,names)
cancer <- "Ov" #choose the cancer you want to sort
# sort table_sig first by P_pro_kin
t0 <- table_sig_other
t1 <- data.table(t0[t0$model=="pho_sub~pro_kinase"& t0$Cancer==cancer,], key="P_pro_kin")
rows <- c()
for(i in 1:top){
r <- unlist(which(t0$pair==t1$pair[i]))
rows <- c(rows,r)
}
table <- t0[rows,]
table$order <- nrow(table):1
table$pairs <- reorder(table$pair,table$order)
p = ggplot(table,aes(x=model, y=pairs, colour=-log10(P_pro_kin), size =size))# make this the original ethni
p = p + facet_grid(.~Cancer, drop=T, space = "free_x",scales = "free_x")#, space = "free", scales = "free")
p = p + geom_point() + theme_bw() + theme_nogrid()
p = p + labs(x = "", y="kinase:substrate:SUB_MOD_RSD")
p = p + theme(axis.title = element_text(size=10), axis.text.x = element_text(colour="black", size=6,angle=90, vjust=0.5), axis.text.y = element_text(colour="black", size=10))#element_text(colour="black", size=14))
p
cancer <- "OV" #choose the cancer you want to sort
# sort table_sig first by P_pro_kin
t0 <- table_sig_other
t1 <- data.table(t0[t0$model=="pho_sub~pro_kinase"& t0$Cancer==cancer,], key="P_pro_kin")
rows <- c()
for(i in 1:top){
r <- unlist(which(t0$pair==t1$pair[i]))
rows <- c(rows,r)
}
table <- t0[rows,]
table$order <- nrow(table):1
table$pairs <- reorder(table$pair,table$order)
p = ggplot(table,aes(x=model, y=pairs, colour=-log10(P_pro_kin), size =size))# make this the original ethni
p = p + facet_grid(.~Cancer, drop=T, space = "free_x",scales = "free_x")#, space = "free", scales = "free")
p = p + geom_point() + theme_bw() + theme_nogrid()
p = p + labs(x = "", y="kinase:substrate:SUB_MOD_RSD")
p = p + theme(axis.title = element_text(size=10), axis.text.x = element_text(colour="black", size=6,angle=90, vjust=0.5), axis.text.y = element_text(colour="black", size=10))#element_text(colour="black", size=14))
p
library(ggplot2)
library(grid)
require(plyr)
lm_eqn = function(df){
m = glm(pho_sub_norm ~ pro_kinase, data = df);
eq <- substitute(italic(pho_sub_norm) == a + b %.% italic(pro_kinase),
list(a = format(coef(m)[1], digits = 2),
b = format(coef(m)[2], digits = 2)));
as.character(as.expression(eq));
}
table <- table_sig
rows <- which(table$KINASE == kinase & table$Pvalue <= 0.05 & table$model == "pho_sub~pro_kinase")
kinase="TP53";
rows <- which(table$KINASE == kinase & table$Pvalue <= 0.05 & table$model == "pho_sub~pro_kinase")
intersect(table_sig$KINASE,names)
intersect(table_sig$SUBSTRATE,names)
kinase = "ERBB2"
rows <- which(table$KINASE == kinase & table$Pvalue <= 0.05 & table$model == "pho_sub~pro_kinase")
rows <- which(table$KINASE == kinase & table$P_pro_kin <= 0.05 & table$model == "pho_sub~pro_kinase")
data_k <- data.frame()
for(i in rows ){
# extract the data for each pair
data <- list1[[i]]$FIT$data
data$SUBSTRATE <- list1[[i]]$SUBSTRATE
data$SUB_MOD_RSD <- list1[[i]]$SUB_MOD_RSD
data_k <- rbind(data_k,data)
}
data_k <- data_k[complete.cases(data_k),]
eq <- ddply(data_k,.(SUBSTRATE,SUB_MOD_RSD),lm_eqn)
p <- ggplot(data = data_k, aes(x = pro_kinase, y = pho_sub_norm)) +
geom_smooth(method = "glm", se=FALSE, color="black", formula = y ~ x) +
geom_point()+
ggtitle(paste("kinase = ",kinase,sep=""))
p1 = p + facet_grid(SUBSTRATE+SUB_MOD_RSD+Cancer~.)
p2 = p1 + geom_text(data=eq,aes(x = 0.5*max(data_k$pro_kinase), y = 0.9,label=V1, size=5), parse = TRUE, inherit.aes=FALSE)
p2
data_k <- data_k[complete.cases(data_k),]
eq <- ddply(data_k,.(SUBSTRATE,SUB_MOD_RSD),lm_eqn)
p <- ggplot(data = data_k, aes(x = pro_kinase, y = pho_sub_norm)) +
geom_smooth(method = "glm", se=FALSE, color="black", formula = y ~ x) +
geom_point()+
ggtitle(paste("kinase = ",kinase,sep=""))
rows <- which(table$KINASE == kinase & table$P_pro_kin <= 0.05 & table$model == "pho_sub~pro_kinase")
data_k <- data.frame()
for(i in rows ){
# extract the data for each pair
data <- list1[[i]]$FIT$data
data$SUBSTRATE <- list1[[i]]$SUBSTRATE
data$SUB_MOD_RSD <- list1[[i]]$SUB_MOD_RSD
data_k <- rbind(data_k,data)
}
View(data_k)
data_k <- data.frame()
for(i in rows ){
# extract the data for each pair
data <- list1[[i]]$DATA
data$SUBSTRATE <- list1[[i]]$SUBSTRATE
data$SUB_MOD_RSD <- list1[[i]]$SUB_MOD_RSD
data_k <- rbind(data_k,data)
}
data_k <- data_k[complete.cases(data_k),]
eq <- ddply(data_k,.(SUBSTRATE,SUB_MOD_RSD),lm_eqn)
p <- ggplot(data = data_k, aes(x = pro_kinase, y = pho_sub_norm)) +
geom_smooth(method = "glm", se=FALSE, color="black", formula = y ~ x) +
geom_point()+
ggtitle(paste("kinase = ",kinase,sep=""))
p1 = p + facet_grid(SUBSTRATE+SUB_MOD_RSD~.)
p2 = p1 + geom_text(data=eq,aes(x = 0.5*max(data_k$pro_kinase), y = 0.9,label=V1, size=5), parse = TRUE, inherit.aes=FALSE)
p2
#BRCA_cor_pro_kinase_phosphosite_
setwd("~/proteomics/pan3can_analysis/phospho_network")
p <- ggplot(data = data_k, aes(x = pro_kinase, y = pho_sub_norm)) +
geom_smooth(method = "glm", se=FALSE, color="black", formula = y ~ x) +
geom_point()+
ggtitle(paste("kinase = ",kinase,sep=""))+
ylim(c(0,1))
p1 = p + facet_grid(SUBSTRATE+SUB_MOD_RSD~.)
p2 = p1 + geom_text(data=eq,aes(x = 0.5*max(data_k$pro_kinase), y = 0.9,label=V1, size=5), parse = TRUE, inherit.aes=FALSE)
p2
#BRCA_cor_pro_kinase_phosphosite_
rows <- which(table$KINASE == kinase & table$P_pro_kin <= 0.05 & table$model == "pho_sub~pro_kinase" & table$Cancer=="BRCA")
data
data_k
data_k <- data.frame()
for(i in rows ){
# extract the data for each pair
data <- list1[[i]]$DATA
data$SUBSTRATE <- list1[[i]]$SUBSTRATE
data$SUB_MOD_RSD <- list1[[i]]$SUB_MOD_RSD
data_k <- rbind(data_k,data)
}
data_k <- data_k[complete.cases(data_k),]
eq <- ddply(data_k,.(SUBSTRATE,SUB_MOD_RSD),lm_eqn)
p <- ggplot(data = data_k, aes(x = pro_kinase, y = pho_sub_norm)) +
geom_smooth(method = "glm", se=FALSE, color="black", formula = y ~ x) +
geom_point()+
ggtitle(paste("kinase = ",kinase,sep=""))+
ylim(c(0,1))
p1 = p + facet_grid(SUBSTRATE+SUB_MOD_RSD~.)
p2 = p1 + geom_text(data=eq,aes(x = 0.5*max(data_k$pro_kinase), y = 0.9,label=V1, size=5), parse = TRUE, inherit.aes=FALSE)
p2
#BRCA_cor_pro_kinase_phosphosite_
rows <- which(table$KINASE == kinase & table$size >= 10 & table$P_pro_kin <= 0.05 & table$model == "pho_sub~pro_kinase" & table$Cancer=="BRCA")
data_k <- data.frame()
for(i in rows ){
# extract the data for each pair
data <- list1[[i]]$DATA
data$SUBSTRATE <- list1[[i]]$SUBSTRATE
data$SUB_MOD_RSD <- list1[[i]]$SUB_MOD_RSD
data_k <- rbind(data_k,data)
}
data_k <- data_k[complete.cases(data_k),]
eq <- ddply(data_k,.(SUBSTRATE,SUB_MOD_RSD),lm_eqn)
p <- ggplot(data = data_k, aes(x = pro_kinase, y = pho_sub_norm)) +
geom_smooth(method = "glm", se=FALSE, color="black", formula = y ~ x) +
geom_point()+
ggtitle(paste("kinase = ",kinase,sep=""))+
ylim(c(0,1))
p1 = p + facet_grid(SUBSTRATE+SUB_MOD_RSD~.)
p2 = p1 + geom_text(data=eq,aes(x = 0.5*max(data_k$pro_kinase), y = 0.9,label=V1, size=5), parse = TRUE, inherit.aes=FALSE)
p2
#BRCA_cor_pro_kinase_phosphosite_
rows <- which(table$KINASE == kinase & table$size >= 30 & table$P_pro_kin <= 0.05 & table$model == "pho_sub~pro_kinase" & table$Cancer=="BRCA")
rows
rows <- which(table$KINASE == kinase & table$size >= 50 & table$P_pro_kin <= 0.05 & table$model == "pho_sub~pro_kinase" & table$Cancer=="BRCA")
rows
data_k <- data.frame()
for(i in rows ){
# extract the data for each pair
data <- list1[[i]]$DATA
data$SUBSTRATE <- list1[[i]]$SUBSTRATE
data$SUB_MOD_RSD <- list1[[i]]$SUB_MOD_RSD
data_k <- rbind(data_k,data)
}
data_k <- data_k[complete.cases(data_k),]
eq <- ddply(data_k,.(SUBSTRATE,SUB_MOD_RSD),lm_eqn)
p <- ggplot(data = data_k, aes(x = pro_kinase, y = pho_sub_norm)) +
geom_smooth(method = "glm", se=FALSE, color="black", formula = y ~ x) +
geom_point()+
ggtitle(paste("kinase = ",kinase,sep=""))+
ylim(c(0,1))
p1 = p + facet_grid(SUBSTRATE+SUB_MOD_RSD~.)
p2 = p1 + geom_text(data=eq,aes(x = 0.5*max(data_k$pro_kinase), y = 0.9,label=V1, size=5), parse = TRUE, inherit.aes=FALSE)
p2
#BRCA_cor_pro_kinase_phosphosite_
names
selected <- names # choose top n rows for P_pro_kin for model1
t0 <- table_sig_other
t1 <- data.table(t0[t0$model=="pho_sub~pro_kinase",], key="P_pro_kin")
rows_k <- c()
for(kinase in selected){
r <- unlist(which(t0$KINASE==kinase))
rows_k <- c(rows_k,r)
}
table <- t0[rows_k,]
table$order <- nrow(table):1
table$pairs <- reorder(table$pair,table$order)
p = ggplot(table,aes(x=model, y=pairs, colour=-log10(P_pro_kin), size =size))# make this the original ethni
p = p + facet_grid(.~Cancer, drop=T, space = "free_x",scales = "free_x")#, space = "free", scales = "free")
p = p + geom_point() + theme_bw() + theme_nogrid()
p = p + labs(x = "", y="kinase:substrate:SUB_MOD_RSD")
p = p + theme(axis.title = element_text(size=10), axis.text.x = element_text(colour="black", size=6,angle=90, vjust=0.5), axis.text.y = element_text(colour="black", size=10))#element_text(colour="black", size=14))
p
rows_k
rows_s <- c()
for(sub in selected){
r <- unlist(which(t0$SUBSTRATE==sub))
rows_s <- c(rows_s,r)
}
t1 <- t0[rows_s,]
t1 <- data.table(t1[t1$model=="pho_sub~pro_kinase" & t1$Cancer == cancer,], key="P_pro_kin")
View(t1)
View(t1)
t1 <- t0[rows_s,]
table <- t1
table$order <- nrow(table):1
table$pairs <- reorder(table$pair,table$order)
p = ggplot(table,aes(x=model, y=pairs, colour=-log10(P_pro_kin), size =size))# make this the original ethni
p = p + facet_grid(.~Cancer, drop=T, space = "free_x",scales = "free_x")#, space = "free", scales = "free")
p = p + geom_point() + theme_bw() + theme_nogrid()
p = p + labs(x = "", y="kinase:substrate:SUB_MOD_RSD")
p = p + theme(axis.title = element_text(size=10), axis.text.x = element_text(colour="black", size=6,angle=90, vjust=0.5), axis.text.y = element_text(colour="black", size=10))#element_text(colour="black", size=14))
p
t2 <- t1[t1$size < 10, ]
table <- t2
table$order <- nrow(table):1
table$pairs <- reorder(table$pair,table$order)
p = ggplot(table,aes(x=model, y=pairs, colour=-log10(P_pro_kin), size =size))# make this the original ethni
p = p + facet_grid(.~Cancer, drop=T, space = "free_x",scales = "free_x")#, space = "free", scales = "free")
p = p + geom_point() + theme_bw() + theme_nogrid()
p = p + labs(x = "", y="kinase:substrate:SUB_MOD_RSD")
p = p + theme(axis.title = element_text(size=10), axis.text.x = element_text(colour="black", size=6,angle=90, vjust=0.5), axis.text.y = element_text(colour="black", size=10))#element_text(colour="black", size=14))
p
t2 <- t1[t1$size >10, ]
t2 <- t1[t1$size >10, ]
table <- t2
table$order <- nrow(table):1
table$pairs <- reorder(table$pair,table$order)
p = ggplot(table,aes(x=model, y=pairs, colour=-log10(P_pro_kin), size =size))# make this the original ethni
p = p + facet_grid(.~Cancer, drop=T, space = "free_x",scales = "free_x")#, space = "free", scales = "free")
p = p + geom_point() + theme_bw() + theme_nogrid()
p = p + labs(x = "", y="kinase:substrate:SUB_MOD_RSD")
p = p + theme(axis.title = element_text(size=10), axis.text.x = element_text(colour="black", size=6,angle=90, vjust=0.5), axis.text.y = element_text(colour="black", size=10))#element_text(colour="black", size=14))
p
t1 <- t0[rows_s,]
t1 <- data.table(t1[t1$Cancer == cancer,], key="P_pro_kin")
cancer
cancer = "BRCA"
t1 <- data.table(t1[t1$Cancer == cancer,], key="P_pro_kin")
t1 <- t0[rows_s,]
t1 <- data.table(t1[t1$Cancer == cancer,], key="P_pro_kin")
t1 <- data.table(t1[t1$model=="pho_sub~pro_kinase" & t1$Cancer == cancer,], key="P_pro_kin")
rows <- c()
for(i in 1:top){
r <- unlist(which(t0$pair==t1$pair[i]))
rows <- c(rows,r)
}
table <- t1[rows,]
table$order <- nrow(table):1
table$pairs <- reorder(table$pair,table$order)
p = ggplot(table,aes(x=model, y=pairs, colour=-log10(P_pro_kin), size =size))# make this the original ethni
p = p + facet_grid(.~Cancer, drop=T, space = "free_x",scales = "free_x")#, space = "free", scales = "free")
p = p + geom_point() + theme_bw() + theme_nogrid()
p = p + labs(x = "", y="kinase:substrate:SUB_MOD_RSD")
p = p + theme(axis.title = element_text(size=10), axis.text.x = element_text(colour="black", size=6,angle=90, vjust=0.5), axis.text.y = element_text(colour="black", size=10))#element_text(colour="black", size=14))
p
View(table)
top = 50
table <- t0[rows,]
table$order <- nrow(table):1
table$pairs <- reorder(table$pair,table$order)
p = ggplot(table,aes(x=model, y=pairs, colour=-log10(P_pro_kin), size =size))# make this the original ethni
p = p + facet_grid(.~Cancer, drop=T, space = "free_x",scales = "free_x")#, space = "free", scales = "free")
p = p + geom_point() + theme_bw() + theme_nogrid()
p = p + labs(x = "", y="kinase:substrate:SUB_MOD_RSD")
p = p + theme(axis.title = element_text(size=10), axis.text.x = element_text(colour="black", size=6,angle=90, vjust=0.5), axis.text.y = element_text(colour="black", size=10))#element_text(colour="black", size=14))
p
library(ggplot2)
library(reshape)
Names <- c("BRCA","OV")
model1 <- c(393/46729,78/10092)
model2 <- c(382/40750,75/6873)
data=data.frame(cbind(model1,model2),Names)   # combine them into a data frame
data.m <- melt(data, id.vars='Names')
View(data.m)
data.s <- melt(data, id.vars='Names')
model1 <- c(5490/46729,702/10092)
model2 <- c(3732/40750,360/6873)
data.o <- melt(data, id.vars='Names')
View(data.o)
View(data.s)
model1 <- c(393/46729,78/10092)
model2 <- c(382/40750,75/6873)
data=data.frame(cbind(model1,model2),Names)   # combine them into a data frame
# melt the data frame for plotting
data.s <- melt(data, id.vars='Names')
model1 <- c(5490/46729,702/10092)
model2 <- c(3732/40750,360/6873)
data=data.frame(cbind(model1,model2),Names)   # combine them into a data frame
data.o <- melt(data, id.vars='Names')
model1 <- c(393/46729,78/10092)
model2 <- c(382/40750,75/6873)
data=data.frame(cbind(model1,model2),Names)   # combine them into a data frame
# melt the data frame for plotting
self_regulated <- melt(data, id.vars='Names')
model1 <- c(5490/46729,702/10092)
model2 <- c(3732/40750,360/6873)
data=data.frame(cbind(model1,model2),Names)   # combine them into a data frame
other_regulated <- melt(data, id.vars='Names')
data <- rbind(self_regulated,other_regulated)
View(data)
library(reshape)
melt(self_regulated,other_regulated)
self_regulated$self_regulation <- "self_regulated"
other_regulated$self_regulation <- "other_regulated"
data <- rbind(self_regulated,other_regulated)
test <- rbind(self_regulated,other_regulated)
colnames(test)[2] <- "percentage_of_significant_correlation"
View(test)
test <- rbind(self_regulated,other_regulated)
colnames(test)[c(2,3)] <- c("model","percentage_of_significant_correlation")
colnames(test)[1:3] <- c( "Cancer","model","percentage_of_significant_correlation")
ggplot() +
geom_bar(data=test, aes(y = percentage_of_significant_correlation, x = model, fill = self_regulatoin), stat="identity",
position='stack') +
theme_bw() +
facet_grid( ~ Cancer)
ggplot() +
geom_bar(data=test, aes(y = percentage_of_significant_correlation, x = model, fill = self_regulation), stat="identity",
position='stack') +
theme_bw() +
facet_grid( ~ Cancer)
model1 <- c(393/46729,78/10092)
model2 <- c(382/40750,75/6873)
model3 <- c(453/35676,95/5467)
data=data.frame(cbind(model1,model2,model3),Names)   # combine them into a data frame
# melt the data frame for plotting
self_regulated <- melt(data, id.vars='Names')
self_regulated$self_regulation <- "self_regulated"
model1 <- c(5490/46729,702/10092)
model2 <- c(3932/40750,360/6873)
model3 <- c(3732/35676,293/5467)
data=data.frame(cbind(model1,model2,model3),Names)   # combine them into a data frame
other_regulated <- melt(data, id.vars='Names')
other_regulated$self_regulation <- "other_regulated"
data.m$plotorder <- c(seq(1,21,by=2),seq(2,22,by=2))
data.m$comparison <- reorder(data.m$Names,c(seq(1,21,by=2),seq(2,22,by=2)))
test <- rbind(self_regulated,other_regulated)
colnames(test)[1:3] <- c( "Cancer","model","percentage_of_significant_correlation")
ggplot() +
geom_bar(data=test, aes(y = percentage_of_significant_correlation, x = model, fill = self_regulation), stat="identity",
position='stack') +
theme_bw() +
facet_grid( ~ Cancer)
ggplot() +
geom_bar(data=test, aes(y = percentage_of_significant_correlation, x = model, fill = self_regulation), stat="identity",
position='stack') +
theme_bw() +
facet_grid( ~ Cancer)+ xlab("regression_model")
Names <- c("BRCA","OV")
model1 <- c(393/1006,78/265)
model2 <- c(382/884,75/212)
model3 <- c(453/828,95/203)
data=data.frame(cbind(model1,model2,model3),Names)   # combine them into a data frame
# melt the data frame for plotting
self_regulated <- melt(data, id.vars='Names')
self_regulated$self_regulation <- "self_regulated"
model1 <- c(5490/45723,702/9827)
model2 <- c(3934/39866,360/6662)
model3 <- c(3732/34848,293/5164)
data=data.frame(cbind(model1,model2,model3),Names)   # combine them into a data frame
other_regulated <- melt(data, id.vars='Names')
other_regulated$self_regulation <- "other_regulated"
test <- rbind(self_regulated,other_regulated)
colnames(test)[1:3] <- c( "Cancer","model","percentage_of_significant_correlation")
ggplot() +
geom_bar(data=test, aes(y = percentage_of_significant_correlation, x = model, fill = self_regulation), stat="identity",
position='dodge') +
theme_bw() +
facet_grid( ~ Cancer + model)+ xlab("regression_model")
ggplot() +
geom_bar(data=test, aes(y = percentage_of_significant_correlation, x = model, fill = self_regulation), stat="identity",
position='dodge') +
theme_bw() +
facet_grid( ~ Cancer)+ xlab("regression_model")
ggplot() +
geom_bar(data=test, aes(y = percentage_of_significant_correlation, x = model, fill = self_regulation), stat="identity",
position='dodge') +
theme_bw() +
facet_grid( ~ Cancer)+ xlab("regression_model")+ylab("percentage_of_significance_in_self_regulation_group")
model1 <- c(393/46729,78/10092)
model2 <- c(382/40750,75/6873)
model3 <- c(453/35676,95/5467)
data=data.frame(cbind(model1,model2,model3),Names)   # combine them into a data frame
# melt the data frame for plotting
self_regulated <- melt(data, id.vars='Names')
self_regulated$self_regulation <- "self_regulated"
model1 <- c(5490/46729,702/10092)
model2 <- c(3932/40750,360/6873)
model3 <- c(3732/35676,293/5467)
data=data.frame(cbind(model1,model2,model3),Names)   # combine them into a data frame
other_regulated <- melt(data, id.vars='Names')
other_regulated$self_regulation <- "other_regulated"
test <- rbind(self_regulated,other_regulated)
colnames(test)[1:3] <- c( "Cancer","model","percentage_of_significant_correlation")
ggplot() +
geom_bar(data=test, aes(y = percentage_of_significant_correlation, x = model, fill = self_regulation), stat="identity",
position='stack') +
theme_bw() +
facet_grid( ~ Cancer)+ xlab("regression_model")+ylab("percentage_of_significance_in_model_group")
