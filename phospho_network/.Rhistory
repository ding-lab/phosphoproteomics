rsd2_list <-  str_split_fixed(pairwise$RSD2,"[p.CZ]",4)[,3]
gene1_list <- as.vector(pairwise$Gene1)
gene2_list <- as.vector(pairwise$Gene2)
rsd1_list
# fill the cor_stat into pairwise table -----------------------------------
coef_corr <- vector(mode = "numeric", length = nrow(pairwise)) + NA
fdr_corr <- coef_corr
rsd1_list <-  str_split_fixed(pairwise$RSD1,"[p.CZ]",4)[,3]
rsd2_list <-  str_split_fixed(pairwise$RSD2,"[p.CZ]",4)[,3]
gene1_list <- as.vector(pairwise$Gene1)
gene2_list <- as.vector(pairwise$Gene2)
for (i in 1:nrow(pairwise)) {
rows <- which( (phosite_corr$GENE1==gene1_list[i]) & (phosite_corr$GENE2==gene2_list[i]) & (phosite_corr$RSD1==rsd1_list[i]) & (phosite_corr$RSD2==rsd2_list[i]) )
if (length(rows) > 0) {
print(rows)
coef_corr[i] <- phosite_corr$coef[rows]
fdr_corr[i] <- phosite_corr$fdr[rows]
}
}
pairwise$coef_corr <- coef_corr
pairwise$fdr_corr <- fdr_corr
## write out tables
tn = paste(baseD,"pan3can_shared_data/analysis_results/hotspot3d/table/",cohort,"_phosphosite_across_protein_distance_and_correlation.txt", sep="")
write.table(pairwise, file=tn, quote=F, sep = '\t', row.names = FALSE)
View(phosite_corr)
test <-  str_split_fixed(pairwise$RSD1,"[p.STYCZ]",4)[,3]
test <-  str_split_fixed(pairwise$RSD1,"[p.XSTYCZ]",4)[,3]
test <-  str_split_fixed(pairwise$RSD1,"[p.XSTYCZ]",4)
test <-  str_split_fixed(pairwise$RSD1,"[p.XSTYCZ]",4)
View(test)
test <-  str_split_fixed(pairwise$RSD1,"[p.XSTYCZ]",5)
rsd1_corr <- str_split_fixed(phosite_corr$RSD1,"[p.STYC]",4)
View(rsd1_corr)
rsd1_corr <- str_split_fixed(phosite_corr$RSD1,"[p.STYC]",3)
rsd2_corr <- str_split_fixed(phosite_corr$RSD2,"[p.STYC]",3)[,2]
rsd1_corr <- str_split_fixed(phosite_corr$RSD1,"[p.STYC]",3)[,2]
# fill the cor_stat into pairwise table -----------------------------------
coef_corr <- vector(mode = "numeric", length = nrow(pairwise)) + NA
fdr_corr <- coef_corr
rsd1_list <-  str_split_fixed(pairwise$RSD1,"[p.XSTYCZ]",5)[,4]
rsd2_list <-  str_split_fixed(pairwise$RSD2,"[p.XSTYCZ]",5)[,4]
gene1_list <- as.vector(pairwise$Gene1)
gene2_list <- as.vector(pairwise$Gene2)
rsd1_corr <- str_split_fixed(phosite_corr$RSD1,"[p.STYC]",3)[,2]
rsd2_corr <- str_split_fixed(phosite_corr$RSD2,"[p.STYC]",3)[,2]
for (i in 1:nrow(pairwise)) {
rows <- which( (phosite_corr$GENE1==gene1_list[i]) & (phosite_corr$GENE2==gene2_list[i]) & (rsd1_corr==rsd1_list[i]) & (rsd2_corr==rsd2_list[i]) )
if (length(rows) > 0) {
print(rows)
coef_corr[i] <- phosite_corr$coef[rows]
fdr_corr[i] <- phosite_corr$fdr[rows]
}
}
pairwise$coef_corr <- coef_corr
pairwise$fdr_corr <- fdr_corr
## write out tables
tn = paste(baseD,"pan3can_shared_data/analysis_results/hotspot3d/table/",cohort,"_phosphosite_across_protein_distance_and_correlation.txt", sep="")
write.table(pairwise, file=tn, quote=F, sep = '\t', row.names = FALSE)
# plot correlation between coef_corr and distances ------------------------
pairwise$pair <- paste(gene1_list,rsd1_list,gene2_list,rsd2_list,sep = ":")
p = ggplot(data = pairwise, aes(x = dis_3d , y = coef_corr))
p = p + geom_smooth(method = "glm", se=FALSE, color="black", formula = y ~ x)
p = p + geom_point(alpha=0.1)
p = p + geom_text(aes(label= ifelse(fdr_corr < sig, pair, NA )),size=2,alpha=1)
p = p + ylim(c(-1,1))
p
fn = paste(baseD,'pan3can_shared_data/analysis_results/hotspot3d/across_protein_',cohort,'_distance_3d_and_coef_corr_correlation.png',sep ="")
ggsave(file=fn, height=6, width=8)
fit1 <- glm(coef_corr ~ dis_3d ,data = pairwise[pairwise$coef_corr>-1,], family=gaussian())
Pvalue=c(coef(summary(fit1))[2,4]); Pvalue
Coef=fit1$coefficients[2]; Coef
pairwise$dis_linear2 <- as.numeric(pairwise$dis_linear)
p <- ggplot(data = pairwise[!is.na(pairwise$coef_corr),], aes(x = dis_linear , y = coef_corr)) +
geom_smooth(method = "glm", se=FALSE, color="black", formula = y ~ x) +
geom_point()+
ylim(c(-1,2))
p
fn = paste(baseD,'pan3can_shared_data/analysis_results/hotspot3d/',cohort,'_distance_linear_and_coef_corr_correlation.png',sep ="")
ggsave(file=fn, height=6, width=8)
fit1 <- glm(coef_corr ~ dis_linear ,data = pairwise, family=gaussian())
Pvalue=c(coef(summary(fit1))[2,4]); Pvalue
Coef=fit1$coefficients[2]; Coef
pairwise$pair <- paste(gene1_list,rsd1_list,gene2_list,rsd2_list,sep = ":")
p = ggplot(data = pairwise, aes(x = dis_3d , y = coef_corr))
p = p + geom_smooth(method = "glm", se=FALSE, color="black", formula = y ~ x)
p = p + geom_point(alpha=0.1)
p = p + geom_text(aes(label= ifelse(fdr_corr < sig, pair, NA )),size=2,alpha=1)
p = p + ylim(c(-1,1))
p
fn = paste(baseD,'pan3can_shared_data/analysis_results/hotspot3d/across_protein_',cohort,'_distance_3d_and_coef_corr_correlation.png',sep ="")
ggsave(file=fn, height=6, width=8)
pairwise_pos <- pairwise[!is.na(pairwise$fdr_corr) & pairwise$coef_corr > 0, ]
pairwise_neg <- pairwise[!is.na(pairwise$fdr_corr) & pairwise$coef_corr < 0, ]
table_2can <- read.delim(paste(baseD,"pan3can_shared_data/analysis_results/regression/table/kinase_substrate_regression.txt",sep = ""))
table1 <- table_2can[table_2can$model=="pho_sub~pro_kin",]
table1_rsd <- str_split_fixed(table1$SUB_MOD_RSD,"[STY]")
table1_rsd <- str_split_fixed(table1$SUB_MOD_RSD,"[STY]",3)
View(table1_rsd)
table1_rsd <- str_split_fixed(table1$SUB_MOD_RSD,"[STY]",3)[,2]
cancer <- cohort
#for (i in 1:nrow(pairwise)) {
for (i in which(pairwise$fdr_corr<=0.05)) {
k1 <- which(table1$SUBSTRATE==gene1_list[i] & table1_rsd==rsd1_list[i] & table1$Cancer==cancer)
k2 <- which(table1$SUBSTRATE==gene2_list[i] & table1_rsd==rsd2_list[i] & table1$Cancer==cancer)
kinase <- unique(intersect(table1$KINASE[k1],table1$KINASE[k2]))
if (length(kinase) > 0) {
for (j in kinase) {
p1 <- table1$FDR_pro_kin[table1$KINASE==j & table1$SUBSTRATE==gene_p[i] & table1$SUB_MOD_RSD==rsd1_p[i] & table1$Cancer==cancer]
p2 <- table1$FDR_pro_kin[table1$KINASE==j & table1$SUBSTRATE==gene_p[i] & table1$SUB_MOD_RSD==rsd2_p[i] & table1$Cancer==cancer]
if ( p1 <= sig && p2 <= sig ) {
print(paste(gene1_list[i],rsd1_p[i],gene2_list[i],rsd2_p[i],pairwise$fdr_corr[i],j,p1,p2,sep = ":"))
}
}
}
}
i
rsd1_list
cancer
kinase
k1
k2
for (i in which(pairwise$fdr_corr <= sig)) {
k1 <- which(table1$SUBSTRATE==gene1_list[i] & table1_rsd==rsd1_list[i] & table1$Cancer==cancer)
k2 <- which(table1$SUBSTRATE==gene2_list[i] & table1_rsd==rsd2_list[i] & table1$Cancer==cancer)
print(paste(k1,k2,sep = ":"))
kinase <- unique(intersect(table1$KINASE[k1],table1$KINASE[k2]))
if (length(kinase) > 0) {
for (j in kinase) {
p1 <- table1$FDR_pro_kin[table1$KINASE==j & table1$SUBSTRATE==gene_p[i] & table1$SUB_MOD_RSD==rsd1_p[i] & table1$Cancer==cancer]
p2 <- table1$FDR_pro_kin[table1$KINASE==j & table1$SUBSTRATE==gene_p[i] & table1$SUB_MOD_RSD==rsd2_p[i] & table1$Cancer==cancer]
if ( p1 <= sig && p2 <= sig ) {
print(paste(gene1_list[i],rsd1_p[i],gene2_list[i],rsd2_p[i],pairwise$fdr_corr[i],j,p1,p2,sep = ":"))
}
}
}
}
which(pairwise$fdr_corr <= sig)
for (i in 1:which(!is.na(pairwise$fdr_corr))) {
#for (i in which(pairwise$fdr_corr <= sig)) {
k1 <- which(table1$SUBSTRATE==gene1_list[i] & table1_rsd==rsd1_list[i] & table1$Cancer==cancer)
k2 <- which(table1$SUBSTRATE==gene2_list[i] & table1_rsd==rsd2_list[i] & table1$Cancer==cancer)
print(paste(k1,k2,sep = ":"))
kinase <- unique(intersect(table1$KINASE[k1],table1$KINASE[k2]))
if (length(kinase) > 0) {
for (j in kinase) {
p1 <- table1$FDR_pro_kin[table1$KINASE==j & table1$SUBSTRATE==gene_p[i] & table1$SUB_MOD_RSD==rsd1_p[i] & table1$Cancer==cancer]
p2 <- table1$FDR_pro_kin[table1$KINASE==j & table1$SUBSTRATE==gene_p[i] & table1$SUB_MOD_RSD==rsd2_p[i] & table1$Cancer==cancer]
if ( p1 <= sig && p2 <= sig ) {
print(paste(gene1_list[i],rsd1_p[i],gene2_list[i],rsd2_p[i],pairwise$fdr_corr[i],j,p1,p2,sep = ":"))
}
}
}
}
cancer <- cohort
for (i in 1:which(!is.na(pairwise$fdr_corr))) {
#for (i in which(pairwise$fdr_corr <= sig)) {
k1 <- which(table1$SUBSTRATE==gene1_list[i] & table1_rsd==rsd1_list[i] & table1$Cancer==cancer)
k2 <- which(table1$SUBSTRATE==gene2_list[i] & table1_rsd==rsd2_list[i] & table1$Cancer==cancer)
kinase <- unique(intersect(table1$KINASE[k1],table1$KINASE[k2]))
print(paste("k1=",unique(table1$KINASE[k1]),sep = ""))
print(paste("k2=",unique(table1$KINASE[k2]),sep = ""))
if (length(kinase) > 0) {
for (j in kinase) {
p1 <- table1$FDR_pro_kin[table1$KINASE==j & table1$SUBSTRATE==gene_p[i] & table1$SUB_MOD_RSD==rsd1_p[i] & table1$Cancer==cancer]
p2 <- table1$FDR_pro_kin[table1$KINASE==j & table1$SUBSTRATE==gene_p[i] & table1$SUB_MOD_RSD==rsd2_p[i] & table1$Cancer==cancer]
if ( p1 <= sig && p2 <= sig ) {
print(paste(gene1_list[i],rsd1_p[i],gene2_list[i],rsd2_p[i],pairwise$fdr_corr[i],j,p1,p2,sep = ":"))
}
}
}
}
gene1_list
for (i in 1:which(!is.na(pairwise$fdr_corr))) {
#for (i in which(pairwise$fdr_corr <= sig)) {
k1 <- which(table1$SUBSTRATE==gene1_list[i] & table1_rsd==rsd1_list[i] & table1$Cancer==cancer)
k2 <- which(table1$SUBSTRATE==gene2_list[i] & table1_rsd==rsd2_list[i] & table1$Cancer==cancer)
kinase <- unique(intersect(table1$KINASE[k1],table1$KINASE[k2]))
print(paste("k1=",unique(table1$KINASE[k1]),sep = ""))
print(paste("k2=",unique(table1$KINASE[k2]),sep = ""))
if (length(kinase) > 0) {
for (j in kinase) {
p1 <- table1$FDR_pro_kin[table1$KINASE==j & table1$SUBSTRATE==gene1_list[i] & table1_rsd==rsd1_list[i] & table1$Cancer==cancer]
p2 <- table1$FDR_pro_kin[table1$KINASE==j & table1$SUBSTRATE==gene2_list[i] & table1_rsd==rsd2_list[i] & table1$Cancer==cancer]
if ( p1 <= sig && p2 <= sig ) {
print(paste(gene1_list[i],rsd1_p[i],gene2_list[i],rsd2_p[i],pairwise$fdr_corr[i],j,p1,p2,sep = ":"))
}
}
}
}
cancer
coef_corr <- vector(mode = "numeric", length = nrow(pairwise)) + NA
fdr_corr <- coef_corr
for (i in 1:nrow(pairwise)) {
rows1 <- which( (phosite_corr$GENE1==gene1_list[i]) & (phosite_corr$GENE2==gene2_list[i]) & (rsd1_corr==rsd1_list[i]) & (rsd2_corr==rsd2_list[i]) )
rows2 <- which( (phosite_corr$GENE1==gene2_list[i]) & (phosite_corr$GENE2==gene1_list[i]) & (rsd1_corr==rsd2_list[i]) & (rsd2_corr==rsd1_list[i]) )
rows <- c(rows1,rows2)
if (length(rows) > 0) {
print(rows)
coef_corr[i] <- phosite_corr$coef[rows]
fdr_corr[i] <- phosite_corr$fdr[rows]
}
}
pairwise$coef_corr <- coef_corr
pairwise$fdr_corr <- fdr_corr
phosite_corr[c(339,340),]
phosite_corr[c(1118,6049),]
phosite_corr[c(6050,1124),]
pairwise_pos <- pairwise[!is.na(pairwise$fdr_corr) & pairwise$coef_corr > 0, ]
pairwise_neg <- pairwise[!is.na(pairwise$fdr_corr) & pairwise$coef_corr < 0, ]
View(pairwise_neg)
View(pairwise_pos)
for (i in 1:which(!is.na(pairwise$fdr_corr))) {
#for (i in which(pairwise$fdr_corr <= sig)) {
k1 <- which(table1$SUBSTRATE==gene1_list[i] & table1_rsd==rsd1_list[i] & table1$Cancer==cancer)
k2 <- which(table1$SUBSTRATE==gene2_list[i] & table1_rsd==rsd2_list[i] & table1$Cancer==cancer)
kinase <- unique(intersect(table1$KINASE[k1],table1$KINASE[k2]))
print(paste("k1=",unique(table1$KINASE[k1]),sep = ""))
print(paste("k2=",unique(table1$KINASE[k2]),sep = ""))
if (length(kinase) > 0) {
for (j in kinase) {
p1 <- table1$FDR_pro_kin[table1$KINASE==j & table1$SUBSTRATE==gene1_list[i] & table1_rsd==rsd1_list[i] & table1$Cancer==cancer]
p2 <- table1$FDR_pro_kin[table1$KINASE==j & table1$SUBSTRATE==gene2_list[i] & table1_rsd==rsd2_list[i] & table1$Cancer==cancer]
if ( p1 <= sig && p2 <= sig ) {
print(paste(gene1_list[i],rsd1_p[i],gene2_list[i],rsd2_p[i],pairwise$fdr_corr[i],j,p1,p2,sep = ":"))
}
}
}
}
cancer
for (i in 1:which(!is.na(pairwise$fdr_corr))) {
#for (i in which(pairwise$fdr_corr <= sig)) {
k1 <- which(table1$KINASE==gene1_list[i] & table1$SUBSTRATE==gene2_list[i] & table1$Cancer==cancer)
k1 <- which(table1$KINASE==gene2_list[i] & table1$SUBSTRATE==gene1_list[i] & table1$Cancer==cancer)
#kinase <- unique(intersect(table1$KINASE[k1],table1$KINASE[k2]))
print(paste("k1=",unique(table1$KINASE[k1]),sep = ""))
print(paste("k2=",unique(table1$KINASE[k2]),sep = ""))
}
for (i in 1:which(!is.na(pairwise$fdr_corr))) {
#for (i in which(pairwise$fdr_corr <= sig)) {
k1 <- which(table1$KINASE==gene1_list[i] & table1$SUBSTRATE==gene2_list[i] & table1$Cancer==cancer)
k1 <- which(table1$KINASE==gene2_list[i] & table1$SUBSTRATE==gene1_list[i] & table1$Cancer==cancer)
#kinase <- unique(intersect(table1$KINASE[k1],table1$KINASE[k2]))
print(paste("k1=",k1,sep = ""))
print(paste("k2=",k2,sep = ""))
}
for (i in 1:which(!is.na(pairwise$fdr_corr))) {
#for (i in which(pairwise$fdr_corr <= sig)) {
k1 <- which(table1$KINASE==gene1_list[i] & table1$SUBSTRATE==gene2_list[i] & table1$Cancer==cancer)
k2 <- which(table1$KINASE==gene2_list[i] & table1$SUBSTRATE==gene1_list[i] & table1$Cancer==cancer)
#kinase <- unique(intersect(table1$KINASE[k1],table1$KINASE[k2]))
print(paste("k1=",k1,sep = ""))
print(paste("k2=",k2,sep = ""))
}
for (i in 1:which(!is.na(pairwise$fdr_corr))) {
k1 <- which(table1$KINASE==gene1_list[i] & table1$SUBSTRATE==gene2_list[i] & table1$Cancer==cancer)
k2 <- which(table1$KINASE==gene2_list[i] & table1$SUBSTRATE==gene1_list[i] & table1$Cancer==cancer)
#kinase <- unique(intersect(table1$KINASE[k1],table1$KINASE[k2]))
print(paste("k1=",k1,sep = ""))
print(paste("k2=",k2,sep = ""))
}
which(!is.na(pairwise$fdr_corr))
for (i in which(!is.na(pairwise$fdr_corr))) {
#for (i in which(pairwise$fdr_corr <= sig)) {
k1 <- which(table1$SUBSTRATE==gene1_list[i] & table1_rsd==rsd1_list[i] & table1$Cancer==cancer)
k2 <- which(table1$SUBSTRATE==gene2_list[i] & table1_rsd==rsd2_list[i] & table1$Cancer==cancer)
kinase <- unique(intersect(table1$KINASE[k1],table1$KINASE[k2]))
print(paste("k1=",unique(table1$KINASE[k1]),sep = ""))
print(paste("k2=",unique(table1$KINASE[k2]),sep = ""))
if (length(kinase) > 0) {
for (j in kinase) {
p1 <- table1$FDR_pro_kin[table1$KINASE==j & table1$SUBSTRATE==gene1_list[i] & table1_rsd==rsd1_list[i] & table1$Cancer==cancer]
p2 <- table1$FDR_pro_kin[table1$KINASE==j & table1$SUBSTRATE==gene2_list[i] & table1_rsd==rsd2_list[i] & table1$Cancer==cancer]
if ( p1 <= sig && p2 <= sig ) {
print(paste(gene1_list[i],rsd1_p[i],gene2_list[i],rsd2_p[i],pairwise$fdr_corr[i],j,p1,p2,sep = ":"))
}
}
}
}
for (i in which(!is.na(pairwise$fdr_corr))) {
k1 <- which(table1$KINASE==gene1_list[i] & table1$SUBSTRATE==gene2_list[i] & table1$Cancer==cancer)
k2 <- which(table1$KINASE==gene2_list[i] & table1$SUBSTRATE==gene1_list[i] & table1$Cancer==cancer)
#kinase <- unique(intersect(table1$KINASE[k1],table1$KINASE[k2]))
print(paste("k1=",k1,sep = ""))
print(paste("k2=",k2,sep = ""))
}
for (i in which(!is.na(pairwise$fdr_corr))) {
k1 <- which(table1$KINASE==gene1_list[i] & table1$SUBSTRATE==gene2_list[i] & table1$Cancer==cancer)
k2 <- which(table1$KINASE==gene2_list[i] & table1$SUBSTRATE==gene1_list[i] & table1$Cancer==cancer)
#kinase <- unique(intersect(table1$KINASE[k1],table1$KINASE[k2]))
print(paste("k1=",k1,sep = ""))
print(paste("k2=",k2,sep = ""))
}
cancer
which(k_s_table$KINASE=="EGFR" && k_s_table$SUB_GENE=="EGFR")
test <- table1[table1$KINASE=="EGFR" & table1$SUBSTRATE=="EGFR",]
View(test)
test <- table1[table1$KINASE=="EGFR" & table1$SUBSTRATE=="EGFR",c(1:5,9,15)]
View(table1)
test <- table1[table1$KINASE=="EGFR" & table1$SUBSTRATE=="EGFR",c(1:5,9,13,15)]
test <- table1[table1$SUBSTRATE=="TP53",c(1:5,9,13,15)]
test <- table1[table1$SUBSTRATE=="PPM1D",c(1:5,9,13,15)]
test <- table1[table1$KINASE=="EGFR" & table1$SUBSTRATE=="EGFR",c(1:5,9,13,15)]
# directory and library ---------------------------------------------------
# # for working on Kuan's mac
# baseD = "/Users/khuang/Box\ Sync/PhD/proteogenomics/CPTAC_pan3Cancer/"
# for working on Yige's mac
baseD = "/Users/yigewu/Box\ Sync/"
library(stringr)
library(ggplot2)
library(readr)
setwd(paste(baseD,"pan3can_analysis/phospho_network",sep=""))
source("../pan3can_aes.R") # aes for general purposes; it should be one directory out of the working directory
cohort <- "BRCA"
sig <- 0.05
pairwise <- read_delim(paste(baseD,"pan3can_shared_data/analysis_results/hotspot3d/table/",cohort,"_phosphosite_within_protein_distance_and_correlation.txt", sep=""),"\t", escape_double = FALSE, trim_ws = TRUE)
p = ggplot(data = pairwise, aes(x = dis_3d , y = coef_corr, color = fdr_corr < 0.05))
p = p + geom_smooth(method = "glm", se=FALSE, color="black", formula = y ~ x)
p = p + geom_point(alpha=0.3, stroke=0) #+ scale_color_gradientn(name= "FDR", na.value=NA)
p = p + geom_text(aes(label= ifelse((dis_3d < 4 & coef_corr <0.4) | (dis_3d > 9 & coef_corr > 0.95), pair, NA ), vjust = -1, hjust = 1),size=2,alpha=0.5)
p = p + theme_bw()
p = p + labs(x="3D distance (ångström)", y = "Correlation coefficient")
#p = p + expand_limits(x = 0)
p
p = ggplot(data = pairwise, aes(x = coef_corr))
p = p + geom_histogram()
p
which(pairwise$coef_corr==1)
test1 <- pairwise[pairwise$coef_corr==1,]
View(test1)
test1 <- pairwise[pairwise$coef_corr==1 & !is.na(pairwise$coef_corr),]
BRCA_pho_f = paste(baseD,"pan3can_shared_data/BRCA/TCGA_Breast_BI_Phosphoproteome.phosphosite.itraq_abbrev_normlized_max10NA_wGpos.txt",sep="")
pho_data = read.delim(BRCA_pho_f)
# ordering the columns by sample name
pho_data <- pho_data[,order(names(pho_data))]
pho_main <- pho_data[,1:77]
#split the SUBSTRATE and SUB_MOD_RSD in the first column
pho_rsd_split <- data.frame(str_split_fixed(pho_data$X, ":", 3))
#covert the SUB_MOD_RSD from lowercase to uppercase
pho_rsd_split[,3] <- toupper(pho_rsd_split[,3])
colnames(pho_rsd_split) <- c("SUBSTRATE","transcript","SUB_MOD_RSD")
test_lmna <- pho_data[pho_rsd_split$SUBSTRATE=="LMNA",]
View(test_lmna)
library(readr)
phosite_corr <- read_delim("~/Box Sync/pan3can_shared_data/analysis_results/hotspot3d/table/BRCA_phosphosite_within_protein_correlation.txt",
"\t", escape_double = FALSE, trim_ws = TRUE)
View(phosite_corr)
test_phosite <- phosite_corr[phosite_corr$GENE1=="LMNA" & phosite_corr$RSD1=="S457",]
test_phosite <- phosite_corr[phosite_corr$GENE1=="LMNA" & phosite_corr$RSD1=="S458",]
View(test_phosite)
test_phosite <- phosite_corr[phosite_corr$GENE1=="LMNA" & phosite_corr$RSD1=="S458" & phosite_corr$RSD2=="S457",]
pairwise <- read_delim(paste(baseD,"pan3can_shared_data/analysis_results/hotspot3d/table/PDB_cptac.brca.ov_sites.pairwise.singleprotein.collapsed",sep = ""), "\t", escape_double = FALSE, col_names = FALSE, trim_ws = TRUE)
pairwise <- data.frame(pairwise[,c(1,2,6,7,12,13,14,15)])
colnames(pairwise) <- c("Gene1","RSD1","Gene2","RSD2","dis_linear","dis_3d","PDB","pvalue_3d")
View(pairwise)
test_p <- pairwise[pairwise$Gene1=="LMNA",]
View(test_p)
coef_corr <- vector(mode = "numeric", length = nrow(pairwise)) + NA
fdr_corr <- coef_corr;
rsd1 <- vector(mode = "character", length = (nrow(pairwise))); rsd2 <- rsd1
rsd1_list <-  str_split_fixed(pairwise$RSD1,"[p.XSTYCZ]",5)[,4]
rsd2_list <-  str_split_fixed(pairwise$RSD2,"[p.XSTYCZ]",5)[,4]
gene1_list <- as.vector(pairwise$Gene1)
pairwise$dis_lin <- abs(as.numeric(rsd2_list)-as.numeric(rsd1_list))
RSD1_list <- as.vector(phosite_corr$RSD1); RSD2_list <- as.vector(phosite_corr$RSD2)
rsd1_list[777]
rsd2_list[777]
rsd1_corr <- str_split_fixed(phosite_corr$RSD1,"[STY]",3)[,2]
rsd2_corr <- str_split_fixed(phosite_corr$RSD2,"[STY]",3)[,2]
which(phosite_corr$GENE1=="LMNA" & phosite_corr$RSD1=="S458")
for (i in 1:nrow(pairwise)) {
rows1 <- which( (phosite_corr$GENE1==gene1_list[i])  & (rsd1_corr==rsd1_list[i]) & (rsd2_corr==rsd2_list[i]) )
rows2 <- which( (phosite_corr$GENE1==gene1_list[i])  & (rsd1_corr==rsd2_list[i]) & (rsd2_corr==rsd1_list[i]) )
rows <- c(rows1,rows2)
if (length(rows) > 0) {
coef_corr[i] <- phosite_corr$coef[rows]
fdr_corr[i] <- phosite_corr$fdr[rows]
rsd1[i] <- RSD1_list[rows]
rsd2[i] <- RSD2_list[rows]
}
}
pairwise$coef_corr <- coef_corr
pairwise$fdr_corr <- fdr_corr
pairwise$rsd1 <- rsd1
pairwise$rsd2 <- rsd2
pairwise$pair <- paste(gene1_list,rsd1,rsd2, sep = ":")
test12<- pairwise[pairwise$coef_corr==1,]
test12<- pairwise[pairwise$coef_corr==1 & !is.na(pairwise$coef_corr),]
View(test12)
p = ggplot(data = pairwise, aes(x = coef_corr))
p = p + geom_histogram()
p
p = ggplot(data = pairwise, aes(x = dis_3d , y = coef_corr, color = fdr_corr < 0.05))
p = p + geom_smooth(method = "glm", se=FALSE, color="black", formula = y ~ x)
p = p + geom_point(alpha=0.3, stroke=0) #+ scale_color_gradientn(name= "FDR", na.value=NA)
p = p + geom_text(aes(label= ifelse((dis_3d < 4 & coef_corr <0.4) | (dis_3d > 9 & coef_corr > 0.95), pair, NA ), vjust = -1, hjust = 1),size=2,alpha=0.5)
p = p + theme_bw()
p = p + labs(x="3D distance (ångström)", y = "Correlation coefficient")
#p = p + expand_limits(x = 0)
p
cohort
View(pairwise)
which(phosite_corr$RSD1=="S457" | phosite_corr$RSD2=="S457")
which((phosite_corr$RSD1=="S457" | phosite_corr$RSD2=="S457" )&phosite_corr$GENE1=="LMNA")
tn = paste(baseD,"pan3can_shared_data/analysis_results/hotspot3d/table/",cohort,"_phosphosite_within_protein_distance_and_correlation.txt", sep="")
write.table(pairwise, file=tn, quote=F, sep = '\t', row.names = FALSE)
cohort <- "OV"
library(readr)
phosite_corr <- read_delim("~/Box Sync/pan3can_shared_data/analysis_results/hotspot3d/table/OV_phosphosite_within_protein_correlation.txt",
"\t", escape_double = FALSE, trim_ws = TRUE)
View(phosite_corr)
pairwise <- read_delim(paste(baseD,"pan3can_shared_data/analysis_results/hotspot3d/table/PDB_cptac.brca.ov_sites.pairwise.singleprotein.collapsed",sep = ""), "\t", escape_double = FALSE, col_names = FALSE, trim_ws = TRUE)
pairwise <- data.frame(pairwise[,c(1,2,6,7,12,13,14,15)])
colnames(pairwise) <- c("Gene1","RSD1","Gene2","RSD2","dis_linear","dis_3d","PDB","pvalue_3d")
coef_corr <- vector(mode = "numeric", length = nrow(pairwise)) + NA
fdr_corr <- coef_corr;
rsd1 <- vector(mode = "character", length = (nrow(pairwise))); rsd2 <- rsd1
rsd1_list <-  str_split_fixed(pairwise$RSD1,"[p.XSTYCZ]",5)[,4]
rsd2_list <-  str_split_fixed(pairwise$RSD2,"[p.XSTYCZ]",5)[,4]
gene1_list <- as.vector(pairwise$Gene1)
pairwise$dis_lin <- abs(as.numeric(rsd2_list)-as.numeric(rsd1_list))
RSD1_list <- as.vector(phosite_corr$RSD1); RSD2_list <- as.vector(phosite_corr$RSD2)
rsd1_corr <- str_split_fixed(phosite_corr$RSD1,"[STY]",3)[,2]
rsd2_corr <- str_split_fixed(phosite_corr$RSD2,"[STY]",3)[,2]
for (i in 1:nrow(pairwise)) {
rows1 <- which( (phosite_corr$GENE1==gene1_list[i])  & (rsd1_corr==rsd1_list[i]) & (rsd2_corr==rsd2_list[i]) )
rows2 <- which( (phosite_corr$GENE1==gene1_list[i])  & (rsd1_corr==rsd2_list[i]) & (rsd2_corr==rsd1_list[i]) )
rows <- c(rows1,rows2)
if (length(rows) > 0) {
coef_corr[i] <- phosite_corr$coef[rows]
fdr_corr[i] <- phosite_corr$fdr[rows]
rsd1[i] <- RSD1_list[rows]
rsd2[i] <- RSD2_list[rows]
}
}
pairwise$coef_corr <- coef_corr
pairwise$fdr_corr <- fdr_corr
pairwise$rsd1 <- rsd1
pairwise$rsd2 <- rsd2
pairwise$pair <- paste(gene1_list,rsd1,rsd2, sep = ":")
p = ggplot(data = pairwise, aes(x = dis_3d , y = coef_corr, color = fdr_corr < 0.05))
p = p + geom_smooth(method = "glm", se=FALSE, color="black", formula = y ~ x)
p = p + geom_point(alpha=0.3, stroke=0) #+ scale_color_gradientn(name= "FDR", na.value=NA)
p = p + geom_text(aes(label= ifelse((dis_3d < 4 & coef_corr <0.4) | (dis_3d > 9 & coef_corr > 0.95), pair, NA ), vjust = -1, hjust = 1),size=2,alpha=0.5)
p = p + theme_bw()
p = p + labs(x="3D distance (ångström)", y = "Correlation coefficient")
#p = p + expand_limits(x = 0)
p
cohort
p = ggplot(data = pairwise, aes(x = dis_3d , y = coef_corr, color = fdr_corr < 0.05))
p = p + geom_smooth(method = "glm", se=FALSE, color="black", formula = y ~ x)
p = p + geom_point(alpha=0.3, stroke=0) #+ scale_color_gradientn(name= "FDR", na.value=NA)
p = p + geom_text(aes(label= ifelse((dis_3d < 4 & coef_corr <0.4) | (dis_3d > 9 & coef_corr > 0.95), pair, NA ), vjust = -1, hjust = 1),size=2,alpha=0.5)
p = p + theme_bw()
p = p + labs(x="3D distance (ångström)", y = "Correlation coefficient")
#p = p + expand_limits(x = 0)
p
cohort
tn = paste(baseD,"pan3can_shared_data/analysis_results/hotspot3d/table/",cohort,"_phosphosite_within_protein_distance_and_correlation.txt", sep="")
write.table(pairwise, file=tn, quote=F, sep = '\t', row.names = FALSE)
pairwise_brca <- read_delim(paste(baseD,"pan3can_shared_data/analysis_results/hotspot3d/table/BRCA_phosphosite_within_protein_distance_and_correlation.txt", sep=""),"\t", escape_double = FALSE, trim_ws = TRUE)
pairwise_ov <- read_delim(paste(baseD,"pan3can_shared_data/analysis_results/hotspot3d/table/OV_phosphosite_within_protein_distance_and_correlation.txt", sep=""),"\t", escape_double = FALSE, trim_ws = TRUE)
pairwise_brca$cancer <- "BRCA"
pairwise_ov$cancer <- "OV"
pairwise <- rbind(pairwise_brca, pairwise_ov)
p = ggplot(data = pairwise, aes(x = dis_3d , y = coef_corr, color = fdr_corr < 0.05))
p = p + facet_grid(.~cancer,scales = "free_y")#, drop=T, space = "free_y",scales = "free_y")#, space = "free", scales = "free")
p = p + geom_smooth(method = "glm", se=FALSE, color="black", formula = y ~ x)
p = p + geom_point(alpha=0.3, stroke=0) #+ scale_color_gradientn(name= "FDR", na.value=NA)
p = p + geom_text(aes(label= ifelse((dis_3d < 4 & coef_corr <0.4) | (dis_3d > 9 & coef_corr > 0.95), pair, NA ), vjust = -1, hjust = 1),size=2,alpha=0.5)
p = p + theme_bw()
p = p + labs(x="3D distance (ångström)", y = "Correlation coefficient")
#p = p + expand_limits(x = 0)
p
test13 <- pairwise[pairwise$coef_corr==1 & !is.na(pairwise$coef_corr),]
View(test13)
test13 <- pairwise[order(pairwise$coef_corr,decreasing = T),]
View(test13)
View(test12)
test_crk <- pho_data[pho_rsd_split$SUBSTRATE=="CRK",]
View(test_crk)
View(test12)
write.table(test13[1:20,], file = "near1corr.pairwise.txt", quote=F, sep = '\t', row.names = FALSE)
fn = paste(baseD,'pan3can_shared_data/analysis_results/hotspot3d/within_protein_2can_distance_3d_and_coef_corr_correlation.pdf',sep ="")
ggsave(file=fn, height=5, width=10)
limx <- 100
if ( cohort == "OV" ) {
limx <- 75
}
p = ggplot(data = pairwise[pairwise$dis_lin<limx,], aes(x = dis_lin , y = coef_corr, color = fdr_corr < 0.05))
p = p + facet_grid(.~cancer,scales = "free_y")#, drop=T, space = "free_y",scales = "free_y")#, space = "free", scales = "free")
p = p + geom_smooth(method = "glm", se=FALSE, color="black", formula = y ~ x)
p = p + geom_point(alpha=0.3, stroke = 0)
p = p + geom_text(aes(label= ifelse((dis_lin < 5 & coef_corr < 0.1) | (dis_lin > 0.5*limx & coef_corr > 0.90), pair, NA ), vjust = 1, hjust = -0.2 ),size=2,alpha=0.5)
p = p + theme_bw()
p = p + labs(x="linear distance", y = "Correlation coefficient")
p
fn = paste(baseD,'pan3can_shared_data/analysis_results/hotspot3d/within_protein_2can_distance_linear_and_coef_corr_correlation_max',limx,'.pdf',sep ="")
ggsave(file=fn, height=5, width=10)
test<- pho_data[pho_rsd_split$SUBSTRATE=="HBB",]
View(test)
test<- pho_data[pho_rsd_split$SUBSTRATE=="PLG",]
View(test)
test<- pho_data[pho_rsd_split$SUBSTRATE=="HBB",]
View(test)
test<- pho_data[pho_rsd_split$SUBSTRATE=="",]
test<- pho_data[pho_rsd_split$SUBSTRATE=="NAT1",]
View(test)
test<- pho_data[pho_rsd_split$SUBSTRATE=="AAMCD",]
test<- pho_data[pho_rsd_split$SUBSTRATE=="AAMDC",]
View(test)
test<- pho_data[pho_rsd_split$SUBSTRATE=="KLC1",]
View(test)
